name: Build and Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  infra:
    environment: prod
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Install AWS SAM CLI
      run: |
        pip install aws-sam-cli
    - name: Ensure S3 bucket exists
      run: |
        aws s3api head-bucket --bucket ${{ secrets.S3_DEPLOY_BUCKET }} 2>/dev/null || \
        aws s3api create-bucket \
          --bucket ${{ secrets.S3_DEPLOY_BUCKET }} \
          --region us-east-1

  deploy-lambda:
    environment: prod
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build native image
      run: mvn clean package native:compile
    - name: Create bootstrap file
      run: |
        echo '#!/bin/sh' > bootstrap
        echo './spring-cloud-native' >> bootstrap
        chmod +x bootstrap

    - name: Package Lambda ZIP
      run: |
        cd target
        cp ../bootstrap .                         # Add bootstrap to the ZIP root
        chmod +x bootstrap
        zip function.zip spring-cloud-native bootstrap

    - name: Create Lambda function (if not exists)
      run: |
        aws lambda get-function --function-name person-crud-prod || \
        aws lambda create-function \
          --function-name person-crud-prod \
          --runtime provided.al2 \
          --handler not.used.in.native.image \
          --role arn:aws:iam::905418179757:role/lambda-basic-execution-role \
          --zip-file fileb://target/function.zip \
          --architectures arm64 \
          --memory-size 512 \
          --timeout 30
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1

    - name: Deploy to AWS Lambda
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-east-1
        function_name: person-crud-prod
        zip_file: ./target/function.zip

  deploy-sam-api-gw:
    environment: prod
    runs-on: ubuntu-latest
    needs: deploy-lambda
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    - name: Package SAM template
      run: |
        sam package \
          --template-file template.yaml \
          --output-template-file packaged.yaml \
          --s3-bucket ${{ secrets.S3_DEPLOY_BUCKET }} \
          --region us-east-1
    - name: Deploy SAM template
      run: |
        sam deploy \
          --template-file packaged.yaml \
          --stack-name person-crud-stack \
          --capabilities CAPABILITY_IAM \
          --region us-east-1